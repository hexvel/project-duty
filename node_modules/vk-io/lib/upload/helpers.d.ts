/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
/// <reference types="node" />
import { UploadNormalizedSourceOptions, UploadAllowedSource } from './types';
/**
 * Check object is stream
 */
export declare const isStream: (source: NodeJS.ReadableStream | Buffer | string) => boolean;
/**
 * Copies object params to new object
 */
export declare const pickExistingProperties: <T, K extends keyof T>(params: T, properties: K[]) => Pick<T, K>;
export declare const normalizeSource: (rawSource: UploadAllowedSource) => UploadNormalizedSourceOptions;
export declare const streamToBuffer: (rawStream: NodeJS.ReadableStream) => Promise<Buffer>;
