import { Context, ContextDefaultState, ContextFactoryOptions } from './context';
import { kSerializeData } from '../../utils/constants';
export type UnsupportedEventContextType = 'unsupported_event';
export type UnsupportedEventContextSubType = string;
type UnsupportedEventContextPayload<P> = P;
export type UnsupportedEventOptions<S, P> = ContextFactoryOptions<UnsupportedEventContextPayload<P>, S>;
export declare class UnsupportedEventContext<S = ContextDefaultState, P extends Record<string, any> = {}> extends Context<P, S, UnsupportedEventContextType, UnsupportedEventContextSubType> {
    constructor(options: UnsupportedEventOptions<S, P>);
    /**
    * Event payload
    */
    get eventPayload(): P;
    /**
     * Returns the custom data
     */
    [kSerializeData](): object;
}
export {};
