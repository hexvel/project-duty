import { Context, ContextFactoryOptions, ContextDefaultState } from './context';
import { WallAttachment, IWallAttachmentPayload } from '../attachments';
import { kSerializeData } from '../../utils/constants';
export type WallPostContextType = 'wall_post';
export type WallPostContextSubType = 'wall_post_new' | 'wall_repost';
export interface IWallPostContextPayload extends IWallAttachmentPayload {
}
export type WallPostContextOptions<S> = ContextFactoryOptions<IWallPostContextPayload, S>;
export declare class WallPostContext<S = ContextDefaultState> extends Context<IWallPostContextPayload, S, WallPostContextType, WallPostContextSubType> {
    wall: WallAttachment;
    constructor(options: WallPostContextOptions<S>);
    /**
     * Checks is repost
     */
    get isRepost(): boolean;
    /**
     * Removes a record from the wall
     */
    deletePost(): Promise<number>;
    /**
     * Returns the custom data
     */
    [kSerializeData](): object;
}
