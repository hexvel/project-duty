import { Attachment, AttachmentFactoryOptions } from './attachment';
import { AttachmentType } from '../../utils/constants';
import { PhotoAttachment, IPhotoAttachmentPayload } from './photo';
export interface IMarketAlbumAttachmentPayload {
    id: number;
    owner_id: number;
    access_key?: string;
    title?: string;
    photo?: IPhotoAttachmentPayload;
    count?: number;
    updated_time?: number;
}
export type MarketAlbumAttachmentOptions = AttachmentFactoryOptions<IMarketAlbumAttachmentPayload>;
export declare class MarketAlbumAttachment extends Attachment<IMarketAlbumAttachmentPayload, AttachmentType.MARKET_ALBUM | 'market_album'> {
    photo?: PhotoAttachment;
    /**
     * Constructor
     */
    constructor(options: MarketAlbumAttachmentOptions);
    /**
     * Load attachment payload
     */
    loadAttachmentPayload(): Promise<void>;
    /**
     * Returns album title
     */
    get title(): string | undefined;
    /**
     * Returns count of products on the album
     */
    get count(): number | undefined;
    /**
     * Returns the date when this album was updated
     */
    get updatedAt(): number | undefined;
    /**
     * Applies the payload
     */
    private applyPayload;
}
